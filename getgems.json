{
    "api_url": "https://api.getgems.io/graphql",
    "db_path": "sqlite.db",
    "ipv6": "",
    
    "snippets" : {
        "bold": "<b>{text}</b>",
        "italic": "<i>{text}</i>",
        "code": "<code>{text}</code>",
        "block": "<pre>{text}</pre>",
        "code-block": "<pre><code class=\"language-{lang}\">{text}</code></pre>",
        "spoiler" : "<tg-spoiler>{text}</tg-spoiler>",
        "strike" : "<s>{text}</s>",
        "link" : "<a href=\"{link}\">{text}</a>",
        "mention": "<a href=\"tg://user?id={id}\">{text}</a>",
        "emoji" : "<tg-emoji emoji-id=\"{id}\">{emoji}</tg-emoji>",
        "quote" : "<blockquote>{text}</blockquote>",
        "quoteV2": "<blockquote expandable>{text}</blockquote>"
    },

    "queries":{
        "nft_collection_history": "query HistoryCollectionSales($collectionAddress: String!, $first: Int!) {\n  historyCollectionNftItems(collectionAddress: $collectionAddress, first: $first) {\n    items {\n      address\n      collectionAddress\n      time\n      typeData {\n        ... on HistoryTypeMint {\n          type\n          historyType\n        }\n        ... on HistoryTypeTransfer {\n          type\n          historyType\n          oldOwner\n          newOwner\n        }\n        ... on HistoryTypeCancelSale {\n          type\n          historyType\n          owner\n          price\n        }\n        ... on HistoryTypeSold {\n          type\n          historyType\n          oldOwner\n          newOwner\n          price\n          rejectFromGlobalTop\n        }\n        ... on HistoryTypePutUpForSale {\n          type\n          historyType\n          owner\n          price\n        }\n        ... on HistoryTypePutUpForAuction {\n          type\n          historyType\n          owner\n        }\n        ... on HistoryTypeCancelAuction {\n          type\n          historyType\n          owner\n        }\n        ... on HistoryTypeBurn {\n          type\n          historyType\n          oldOwner\n          newOwner\n        }\n      }\n      nft {\n        address\n        name\n      }\n    }\n  }\n}",
    "get_sale_info":
    {
        "native":"query Items($address: String!, $first: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      sale {\n        ... on NftSaleFixPrice {\n          address\n          nftOwnerAddress\n          fullPrice\n          marketplaceFeeAddress\n          marketplaceFee\n          royaltyAddress\n          royaltyAmount\n          networkFee\n          __typename\n        }\n        ... on NftSaleAuction {\n          address\n          nftOwnerAddress\n          marketplaceFeeAddress\n          marketplaceFeePercent\n          royaltyAddress\n          royaltyPercent\n          minBid\n          maxBid\n          minStep\n          stepIsPercent\n          isCancelable\n          minNextBid\n          end\n          finishAt\n          lastBidAmount\n          lastBidAmountWithFee\n          lastBidAddress\n          lastBidUser {\n            wallet\n            name\n            lang\n            telegram {\n              hasTelegram\n              userName\n            }\n            socialLinks {\n              type\n              url\n            }\n          }\n          lastBidAt\n          version\n          networkFee\n          __typename\n        }\n      }\n    }\n  }\n}",
        "extend":"query Items($address: String!, $first: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      sale {\n        ... on NftSaleFixPriceDisintar {\n          address\n          nftOwnerAddress\n          fullPrice\n          marketplaceFeeAddress\n          marketplaceFee\n          royaltyAddress\n          royaltyAmount\n          networkFee\n          __typename\n        }\n        ... on TelemintAuction {\n          lastBidAmount\n          lastBidAddress\n          lastBidUser {\n            wallet\n            name\n            lang\n            telegram {\n              hasTelegram\n              userName\n            }\n            socialLinks {\n              type\n              url\n            }\n          }\n          lastBidAt\n          nextBidAmount\n          maxBidAmount\n          isFixPrice\n          finishAt\n          link\n          royaltyPercent\n          marketplaceFeePercent\n          isGetGemsDns\n          __typename\n        }\n      }\n    }\n  }\n}"
    },
    "get_nft_info":"query Items($address: String!, $first: Int!, $width: Int!, $height: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      id\n      address\n      owner {\n        wallet\n        name\n        telegram {\n          hasTelegram\n          userName\n        }\n        socialLinks {\n          type\n          url\n        }\n        lang\n      }\n      collection {\n        address\n        name\n        description\n        owner {\n          wallet\n          name\n          lang\n          telegram {\n            hasTelegram\n            userName\n          }\n          socialLinks {\n            url\n            type\n          }\n        }\n        socialLinks\n        hasRarityAttributes\n        image {\n          image {\n            baseUrl\n            preview(width: $width, height: $height)\n            sized(width: $width, height: $height)\n          }\n        }\n        approximateItemsCount\n        approximateHoldersCount\n      }\n      version\n      index\n      editorAddress\n      name\n      description\n      content {\n        ... on NftContentImage {\n          image {\n            baseUrl\n            preview(width: $width, height: $height)\n            sized(width: $width, height: $height)\n          }\n          originalUrl\n        }\n        ... on NftContentNotLoaded {\n          notLoaded\n        }\n        ... on NftContentVideo {\n          baseUrl\n          preview(width: $width, height: $height)\n          sized(width: $width, height: $height)\n        }\n      }\n      attributes {\n        displayType\n        traitType\n        value\n      }\n      metadataSourceType\n      contentSourceType\n      isApproved\n      priority\n      isBlocked\n      reactionCounters {\n        likes\n      }\n      rarityRank\n      rarityAttributes {\n        traitType\n        value\n        maxShapeCount\n        rarityPercent\n      }\n      kind\n      maxOffer {\n        fullPrice\n        profitPrice\n        royaltyPrice\n        feePrice\n        isKnownMarketplaceFeeReceiver\n        feeAddress\n        finishAt\n        user {\n          wallet\n          telegram {\n            hasTelegram\n            userName\n          }\n          socialLinks {\n            type\n            url\n          }\n          name\n          lang\n        }\n        offerAddress\n        royaltyAddress\n      }\n      isBurned\n      isHiddenByUser\n      domain\n      colorScheme\n      isRevealable\n    }\n  }\n}",
    "get_collection_info": "query NftCollectionByAddress($address: String!) {\n  nftCollectionByAddress(address: $address) {\n    isApproved\n    name\n    socialLinks\n    isVerified\n    address\n    approximateHoldersCount\n    approximateItemsCount\n    coverImage {\n      image {\n        baseUrl\n      }\n      originalUrl\n    }\n    description\n    domain\n    hasRarityAttributes\n    id\n    image {\n      image {\n        baseUrl\n      }\n      originalUrl\n    }\n    isBadSalesHidden\n    isBlocked\n    isGetGemsDnsCollection\n    isRarityEnabled\n    isRarityValid\n    owner {\n      wallet\n      telegram {\n        userName\n        hasTelegram\n        canSendMessage\n      }\n      socialLinks {\n        url\n        type\n      }\n      permissions\n      notificationsState {\n        count\n      }\n      name\n      lang\n      isHiddenExist\n      isCollectionCreator\n      isBurn\n      isBanned\n      id\n      domain\n      description\n      cover\n      avatar\n    }\n    ownerAddress\n    priority\n    rawMetadata\n    royaltyParams {\n      royaltyAddress\n      royaltyBase\n      royaltyFactor\n    }\n  }\n}",
    "get_user_info" : "query UserByAddress($address: String!) {\n  userByAddress(address: $address) {\n    wallet\n    name\n    lang\n    telegram {\n      hasTelegram\n      userName\n    }\n    socialLinks {\n      type\n      url\n    }\n  }\n}",
    "get_nft_owner" : "query Owner($address: String!, $first: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      owner {\n        wallet\n          name\n          lang\n          telegram {\n            hasTelegram\n            userName\n          }\n          socialLinks {\n            url\n            type\n          }\n      }\n    }\n  }\n}"
    },

    "local":{
        "NotLoaded":"pic/notloaded.png",
        "Success":"pic/success.png",
        "Original":"pic/original.png",
        "Error":"pic/error.png"
    },

    "translate":{
        "en": {
            "Name" : "English",
            "Close": "Close",
            "help_note": "/start - restart bot\n/help - send this note again\n/list_notification - return list of NFT notifications for this chat\n/add_notification - add new notification for NFT collection\n/delete_notification - delete notification for NFT collection\n...\n\nmore soon...",
            "SoldItem": ["Sold for:", "Market fee:", "Royalty fee:", "Network fee:", "Seller's profit:", "New owner:", "Old owner:"],
            "AuctionItem": ["Listed for sale:", "Current price:", "Market fee:", "Royalty fee:", "Network fee:", "Maximum price:", "Next price:", "Minimum increment:", "End time:", "Profit:"],
            "SaleItem": ["Listed for sale:", "Current price:", "Market fee:", "Royalty fee:", "Network fee:", "Seller's profit:"],
            "NftItem": ["appeared for sale!", "was sold!", "was listed at auction!", "was minted!", "was burned!", "was withdrawn from sale!", "was withdrawn from auction!", "was sent to a new owner!", "Undefined NFT status", "No detailed information on the transaction could be found", "Rarity:", "Reactions:", "Attributes:", "Owner's wallet", "Getgems account", "Telegram", "Time of tx:"],
            "tg_util": ["Buy now on", "Check on", "Collection on", "⚙️ Set up for your group/channel ⚙️", "You can place your AD here"],
            "date_util" : ["ago", "months", "days", "hours", "minutes", "seconds"],
            "setup" : ["Thank you! Now please enter the NFT collection address in response to this message", "You do not have permission to execute this command", "Thank you! The bot is now set up, but you can see all commands by /help", "Incorrect NFT collection address. Please enter it again."],
            "settings" : ["Configured notifications in this chat", "Data about notification", "Name", "Address", "Owner", "Description", "Edit", "Delete", "Back to list"]
        },
        "ru":{
            "Name" : "Русский",
            "Close" : "Закрыть",
            "help_note": "/start - перезапустить бота\n/help - отправить это сообщение снова\n/list_notification - показать список уведомлений о NFT для этого чата\n/add_notification - добавить новое уведомление для коллекции NFT\n/delete_notification - удалить уведомление для коллекции NFT\n...\n\nбольше функций позже...",
            "SoldItem":["Продано за:","Комиссия маркета:","Комиссия роялти:","Комиссия сети:","Профит продавца:","Новый владельец:","Старый владельец:"],
            "AuctionItem": ["Выставил на продажу:", "Текущая цена:", "Комиссия маркета:", "Комиссия роялти:", "Комиссия сети:", "Максимальная цена:", "Следующая цена:", "Минимальный шаг:", "Время окончания:", "Прибыль продавца:"],
            "SaleItem" : ["Выставил на продажу:", "Текущая цена:", "Комиссия маркета:", "Комиссия роялти:", "Комиссия сети:", "Профит продавца:"],
            "NftItem" : ["появилась в продаже!", "была продана!", "была выставлена на аукцион!", "была заминчена!", "была сожжена!", "была снята с продажи!", "была снята с аукциона!", "была отправлена новому владельцу!", "Не определён статус NFT", "Детальной информации по транзакции не удалось обнаружить", "Уникальность:", "Реакции:", "Атрибуты:", "Кошелёк владельца", "Аккаунт Getgems", "Телеграм", "Время транзакции:"],
            "tg_util" : ["Купить на", "Смотреть на", "Коллекция на", "⚙️ Настроить для вашей группы/канала ⚙️", "Ты можешь поместить свою рекламу здесь"],
            "date_util" : ["назад", "месяцев", "дней", "часов", "минут", "секунд"],
            "setup" : ["Спасибо! Теперь введите адрес NFT коллекции ответом на это сообщение", "У вас нет прав на выполнение этой команды", "Спасибо! Теперь бот настроен, но вы также можете просмотреть все команды с помощью /help", "Некорректный адрес NFT коллекции. Пожалуйста, введите еще раз."],
            "settings" : ["Настроенные уведомления в этом чате", "Данные об уведомлении", "Название", "Адрес", "Владелец", "Описание", "Редактировать", "Удалить", "Назад к списку"]

        }
    }
}