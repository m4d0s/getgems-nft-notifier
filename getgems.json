{
    "api_url": "https://api.getgems.io/graphql",
    "db_path": "sqlite.db",
    "queries":{
        "nft_collection_history": "query HistoryCollectionSales($collectionAddress: String!, $first: Int!) {\n  historyCollectionNftItems(collectionAddress: $collectionAddress, first: $first) {\n    items {\n      address\n      collectionAddress\n      time\n      typeData {\n        ... on HistoryTypeMint {\n          type\n          historyType\n        }\n        ... on HistoryTypeTransfer {\n          type\n          historyType\n          oldOwner\n          newOwner\n        }\n        ... on HistoryTypeCancelSale {\n          type\n          historyType\n          owner\n          price\n        }\n        ... on HistoryTypeSold {\n          type\n          historyType\n          oldOwner\n          newOwner\n          price\n          rejectFromGlobalTop\n        }\n        ... on HistoryTypePutUpForSale {\n          type\n          historyType\n          owner\n          price\n        }\n        ... on HistoryTypePutUpForAuction {\n          type\n          historyType\n          owner\n        }\n        ... on HistoryTypeCancelAuction {\n          type\n          historyType\n          owner\n        }\n        ... on HistoryTypeBurn {\n          type\n          historyType\n          oldOwner\n          newOwner\n        }\n      }\n      nft {\n        address\n        name\n      }\n    }\n  }\n}",
    "get_sale_info":
    {
        "native":"query Items($address: String!, $first: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      sale {\n        ... on NftSaleFixPrice {\n          address\n          nftOwnerAddress\n          fullPrice\n          marketplaceFeeAddress\n          marketplaceFee\n          royaltyAddress\n          royaltyAmount\n          networkFee\n          __typename\n        }\n        ... on NftSaleAuction {\n          address\n          nftOwnerAddress\n          marketplaceFeeAddress\n          marketplaceFeePercent\n          royaltyAddress\n          royaltyPercent\n          minBid\n          maxBid\n          minStep\n          stepIsPercent\n          isCancelable\n          minNextBid\n          end\n          finishAt\n          lastBidAmount\n          lastBidAmountWithFee\n          lastBidAddress\n          lastBidUser {\n            wallet\n            name\n            lang\n            telegram {\n              hasTelegram\n              userName\n            }\n            socialLinks {\n              type\n              url\n            }\n          }\n          lastBidAt\n          version\n          networkFee\n          __typename\n        }\n      }\n    }\n  }\n}",
        "extend":"query Items($address: String!, $first: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      sale {\n        ... on NftSaleFixPriceDisintar {\n          address\n          nftOwnerAddress\n          fullPrice\n          marketplaceFeeAddress\n          marketplaceFee\n          royaltyAddress\n          royaltyAmount\n          networkFee\n          __typename\n        }\n        ... on TelemintAuction {\n          lastBidAmount\n          lastBidAddress\n          lastBidUser {\n            wallet\n            name\n            lang\n            telegram {\n              hasTelegram\n              userName\n            }\n            socialLinks {\n              type\n              url\n            }\n          }\n          lastBidAt\n          nextBidAmount\n          maxBidAmount\n          isFixPrice\n          finishAt\n          link\n          royaltyPercent\n          marketplaceFeePercent\n          isGetGemsDns\n          __typename\n        }\n      }\n    }\n  }\n}"
    },
    "get_nft_info":"query Items($address: String!, $first: Int!, $width: Int!, $height: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      id\n      address\n      owner {\n        wallet\n        name\n        telegram {\n          hasTelegram\n          userName\n        }\n        socialLinks {\n          type\n          url\n        }\n        lang\n      }\n      collection {\n        address\n        name\n        description\n        owner {\n          wallet\n          name\n          lang\n          telegram {\n            hasTelegram\n            userName\n          }\n          socialLinks {\n            url\n            type\n          }\n        }\n        socialLinks\n        hasRarityAttributes\n        image {\n          image {\n            baseUrl\n            preview(width: $width, height: $height)\n            sized(width: $width, height: $height)\n          }\n        }\n        approximateItemsCount\n        approximateHoldersCount\n      }\n      version\n      index\n      editorAddress\n      name\n      description\n      content {\n        ... on NftContentImage {\n          image {\n            baseUrl\n            preview(width: $width, height: $height)\n            sized(width: $width, height: $height)\n          }\n          originalUrl\n        }\n        ... on NftContentNotLoaded {\n          notLoaded\n        }\n        ... on NftContentVideo {\n          baseUrl\n          preview(width: $width, height: $height)\n          sized(width: $width, height: $height)\n        }\n      }\n      attributes {\n        displayType\n        traitType\n        value\n      }\n      metadataSourceType\n      contentSourceType\n      isApproved\n      priority\n      isBlocked\n      reactionCounters {\n        likes\n      }\n      rarityRank\n      rarityAttributes {\n        traitType\n        value\n        maxShapeCount\n        rarityPercent\n      }\n      kind\n      maxOffer {\n        fullPrice\n        profitPrice\n        royaltyPrice\n        feePrice\n        isKnownMarketplaceFeeReceiver\n        feeAddress\n        finishAt\n        user {\n          wallet\n          telegram {\n            hasTelegram\n            userName\n          }\n          socialLinks {\n            type\n            url\n          }\n          name\n          lang\n        }\n        offerAddress\n        royaltyAddress\n      }\n      isBurned\n      isHiddenByUser\n      domain\n      colorScheme\n      isRevealable\n    }\n  }\n}",
    "get_collection_info": "query NftCollectionByAddress($address: String!) {\n  nftCollectionByAddress(address: $address) {\n    name\n    socialLinks\n    address\n  }\n}",
    "get_user_info" : "query UserByAddress($address: String!) {\n  userByAddress(address: $address) {\n    wallet\n    name\n    lang\n    telegram {\n      hasTelegram\n      userName\n    }\n    socialLinks {\n      type\n      url\n    }\n  }\n}",
    "get_nft_owner" : "query Owner($address: String!, $first: Int!) {\n  reactionsNft(address: $address, first: $first) {\n    nft {\n      owner {\n        wallet\n          name\n          lang\n          telegram {\n            hasTelegram\n            userName\n          }\n          socialLinks {\n            url\n            type\n          }\n      }\n    }\n  }\n}"
    },

    "translate":{
        "en": {
            "SoldItem": ["Sold for:", "Market fee:", "Royalty fee:", "Network fee:", "Seller's profit:", "New owner:", "Old owner:"],
            "AuctionItem": ["Listed for sale:", "Current price:", "Market fee:", "Royalty fee:", "Network fee:", "Maximum price:", "Next price:", "Minimum increment:", "End time:", "Profit:"],
            "SaleItem": ["Listed for sale:", "Current price:", "Market fee:", "Royalty fee:", "Network fee:", "Seller's profit:"],
            "NftItem": ["appeared for sale!", "was sold!", "was listed at auction!", "was minted!", "was burned!", "was withdrawn from sale!", "was withdrawn from auction!", "was sent to a new owner!", "Undefined NFT status", "No detailed information on the transaction could be found", "Rarity:", "Reactions:", "Attributes:", "Owner's wallet", "Getgems account", "Telegram", "Time of tx:"],
            "tg_util": ["Buy now on", "Check on", "Collection on", "⚙️ Set up for your group/channel ⚙️", "You can place your AD here"]
        },
        "ru":{
            "SoldItem":["Продано за:","Комиссия маркета:","Комиссия роялти:","Комиссия сети:","Профит продавца:","Новый владельец:","Старый владельец:"],
            "AuctionItem": ["Выставил на продажу:", "Текущая цена:", "Комиссия маркета:", "Комиссия роялти:", "Комиссия сети:", "Максимальная цена:", "Следующая цена:", "Минимальный шаг:", "Время окончания:", "Прибыль продавца:"],
            "SaleItem" : ["Выставил на продажу:", "Текущая цена:", "Комиссия маркета:", "Комиссия роялти:", "Комиссия сети:", "Профит продавца:"],
            "NftItem" : ["появилась в продаже!", "была продана!", "была выставлена на аукцион!", "была заминчена!", "была сожжена!", "была снята с продажи!", "была снята с аукциона!", "была отправлена новому владельцу!", "Не определён статус NFT", "Детальной информации по транзакции не удалось обнаружить", "Уникальность:", "Реакции:", "Атрибуты:", "Кошелёк владельца", "Аккаунт Getgems", "Телеграм", "Время транзакции:"],
            "tg_util" : ["Купить на", "Смотреть на", "Коллекция на", "⚙️ Настроить для вашей группы/канала ⚙️", "Ты можешь поместить свою рекламу здесь"]
        }
    }
}